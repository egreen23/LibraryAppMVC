// <auto-generated />
using System;
using LibraryAppMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryAppMVC.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20241108145433_AddAuthorTable")]
    partial class AddAuthorTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryAppMVC.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DoD")
                        .HasColumnType("date");

                    b.Property<string>("LuogoNascita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazionalita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Author", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cognome = "Maximo",
                            DoB = new DateTime(2006, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LuogoNascita = "Birmingham",
                            Nazionalita = "inglese",
                            Nome = "Steve"
                        },
                        new
                        {
                            Id = 2,
                            Cognome = "Terry",
                            DoB = new DateTime(1942, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoD = new DateTime(1984, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LuogoNascita = "Londra",
                            Nazionalita = "inglese",
                            Nome = "Harry"
                        },
                        new
                        {
                            Id = 3,
                            Cognome = "Margiotta",
                            DoB = new DateTime(1954, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoD = new DateTime(1994, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LuogoNascita = "Birmingham",
                            Nazionalita = "italiana",
                            Nome = "Mario"
                        },
                        new
                        {
                            Id = 4,
                            Cognome = "Henry",
                            DoB = new DateTime(1931, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoD = new DateTime(1962, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LuogoNascita = "Birmingham",
                            Nazionalita = "francese",
                            Nome = "Thierry"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
